{"mappings":"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","sources":["src/index.js","node_modules/tom-select/src/contrib/microevent.ts","node_modules/tom-select/src/contrib/microplugin.ts","node_modules/tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/regex.js","node_modules/tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/strings.js","node_modules/tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/index.js","node_modules/tom-select/node_modules/@orchidjs/sifter/dist/esm/utils.js","node_modules/tom-select/node_modules/@orchidjs/sifter/dist/esm/sifter.js","node_modules/tom-select/node_modules/@orchidjs/sifter/lib/utils.ts","node_modules/tom-select/src/vanilla.ts","node_modules/tom-select/src/contrib/highlight.ts","node_modules/tom-select/src/constants.ts","node_modules/tom-select/src/defaults.ts","node_modules/tom-select/src/utils.ts","node_modules/tom-select/src/getSettings.ts","node_modules/tom-select/src/tom-select.ts","node_modules/tom-select/src/plugins/change_listener/plugin.ts","node_modules/tom-select/src/plugins/checkbox_options/plugin.ts","node_modules/tom-select/src/plugins/clear_button/plugin.ts","node_modules/tom-select/src/plugins/drag_drop/plugin.ts","node_modules/tom-select/src/plugins/dropdown_header/plugin.ts","node_modules/tom-select/src/plugins/caret_position/plugin.ts","node_modules/tom-select/src/plugins/dropdown_input/plugin.ts","node_modules/tom-select/src/plugins/input_autogrow/plugin.ts","node_modules/tom-select/src/plugins/no_backspace_delete/plugin.ts","node_modules/tom-select/src/plugins/no_active_items/plugin.ts","node_modules/tom-select/src/plugins/optgroup_columns/plugin.ts","node_modules/tom-select/src/plugins/remove_button/plugin.ts","node_modules/tom-select/src/plugins/restore_on_backspace/plugin.ts","node_modules/tom-select/src/plugins/virtual_scroll/plugin.ts","node_modules/tom-select/src/tom-select.complete.ts"],"sourcesContent":["'use-strict';\n\nimport {\n  fetchBreeds,\n  fetchCatByBreed,\n  displayLoader,\n  notDisplayLoader,\n} from './cat-api';\nimport TomSelect from 'tom-select';\n\nconst breedSelect = document.querySelector('.breed-select');\nconst catImage = document.getElementById('cat-image');\nconst catInfo = document.querySelector('.cat-info');\nconst breedName = document.getElementById('breed-name');\nconst description = document.getElementById('description');\nconst temperament = document.getElementById('temperament');\n\nstartPage();\n\nfetchBreeds().then(breeds => {\n  notDisplayLoader();\n  populateBreeds(breeds);\n  breedSelect.addEventListener('change', changeBreeds);\n});\n\nfunction populateBreeds(breeds) {\n  const options = breeds.map(breed => ({ value: breed.id, text: breed.name }));\n\n  const select = new TomSelect(breedSelect, {\n    hideSelected: false,\n    options: options,\n    placeholder: 'Select a Breed...',\n  });\n}\n\nfunction changeBreeds() {\n  const selectedOption = breedSelect.options[breedSelect.selectedIndex];\n  const breedIdSelected = selectedOption.value;\n\n  if (breedIdSelected) {\n    displayLoader();\n\n    fetchCatByBreed(breedIdSelected)\n      .then(catData => {\n        displayInfo(catData[0]);\n      })\n      .catch(error => {\n        console.error('Error fetching cat data:', error);\n        hideCatInfo();\n      })\n      .finally(() => {\n        notDisplayLoader();\n      });\n  }\n}\n\nfunction displayInfo(catData) {\n  breedName.textContent = catData.breeds[0].name || 'No description available';\n  description.textContent =\n    catData.breeds[0].description || 'No description available';\n  temperament.textContent =\n    catData.breeds[0].temperament || 'No information available';\n  catImage.src = catData.url;\n  catInfo.style.display = 'flex';\n}\n\nfunction hideCatInfo() {\n  catInfo.style.display = 'none';\n}\n\nfunction startPage() {\n  displayLoader();\n  breedSelect.style.display = 'none';\n  catInfo.style.display = 'none';\n}\n","/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\nexport { allSubstrings };\n//# sourceMappingURL=strings.js.map\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\nimport { toArray, setToPattern, escape_regex, arrayToPattern, sequencePattern } from './regex.js';\nexport { escape_regex } from './regex.js';\nimport { allSubstrings } from './strings.js';\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return toArray(str).reduce(\n  /**\n   * @param {string} result\n   * @param {string} char\n   */\n  (result, char) => {\n    return result + _asciifold(char);\n  }, '');\n};\n/**\n * @param {string} str\n * @return {string}\n */\n\nconst _asciifold = str => {\n  str = normalize(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  }); //return str;\n\n  return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\nexport { _asciifold, asciifold, code_points, generateMap, generateSets, generator, getPattern, initialize, mapSequence, normalize, substringsToPattern, unicode_map };\n//# sourceMappingURL=index.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from '@orchidjs/unicode-variants';\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue } from './utils.js';\nimport { escape_regex, getPattern } from '@orchidjs/unicode-variants';\nexport { getPattern } from '@orchidjs/unicode-variants';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport { Sifter };\n//# sourceMappingURL=sifter.js.map\n","\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\trefreshThrottle: 300,\n\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * use setTimeout if timeout > 0 \n */\nexport const timeout = (fn:()=>void,timeout:number) => {\n\tif( timeout > 0 ){\n\t\treturn setTimeout(fn,timeout);\n\t}\n\n\tfn.call(null);\n\treturn null;\n}\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n","import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\t\tlet $order = 0;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\t\t\t\toption_data.$order\t\t\t= option_data.$order || ++$order;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\toptgroup_data.$order\t\t\t\t\t= optgroup_data.$order || ++$order;\n\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\ttimeout,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isReadOnly\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\tprivate refreshTimeout\t\t\t: null|ReturnType<typeof setTimeout> = null;\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete','spellcheck'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else if( input.readOnly ){\n\t\t\tself.setReadOnly(true);\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\t\n\t\tif( this.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.inputValue();\n\t\tif( this.lastValue === value ) return;\n\t\tthis.lastValue = value;\n\t\t\n\t\tif( value == '' ){\n\t\t\tthis._onInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif( this.refreshTimeout ){\n\t\t\tclearTimeout(this.refreshTimeout);\n\t\t}\n\n\t\tthis.refreshTimeout = timeout(()=> {\n\t\t\tthis.refreshTimeout = null;\n\t\t\tthis._onInput();\n\t\t}, this.settings.refreshThrottle);\n\t}\n\n\t_onInput():void {\n\t\tconst value = this.lastValue;\n\n\t\tif( this.settings.shouldLoad.call(this,value) ){\n\t\t\tthis.load(value);\n\t\t}\n\n\t\tthis.refreshOptions();\n\t\tthis.trigger('type', value);\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif( self.isDisabled || self.isReadOnly ){\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.inputState();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.inputState();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.inputState();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif( self.isDisabled || self.isReadOnly) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\n\t\ttype Group = {fragment:DocumentFragment,order:number,optgroup:string}\n\t\tconst groups: {[key:string]:number} = {};\n\t\tconst groups_order:Group[]\t= [];\n\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option:HTMLElement|null = null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// get fragment for group and the position of the group in group_order\n\t\tconst getGroupFragment = (optgroup:string,order:number):[number,DocumentFragment] => {\n\n\t\t\tlet group_order_i = groups[optgroup];\n\n\t\t\tif( group_order_i !== undefined ){\n\t\t\t\tlet order_group = groups_order[group_order_i];\n\t\t\t\tif( order_group !== undefined ){\n\t\t\t\t\treturn [group_order_i,order_group.fragment];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet group_fragment = document.createDocumentFragment();\n\t\t\tgroup_order_i = groups_order.length;\n\t\t\tgroups_order.push({fragment:group_fragment,order,optgroup});\n\n\t\t\treturn [group_order_i,group_fragment]\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\t\t\t\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\n\t\t\t\tlet order = option.$order;\n\t\t\t\tlet self_optgroup = self.optgroups[optgroup];\n\t\t\t\tif( self_optgroup === undefined ){\t\t\t\t\t\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}else{\n\t\t\t\t\torder = self_optgroup.$order;\n\t\t\t\t}\n\n\t\t\t\tconst [group_order_i,group_fragment] = getGroupFragment(optgroup,order);\n\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tif( optgroup != '' ){\n\t\t\t\t\tgroups[optgroup] = group_order_i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\treturn a.order - b.order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (group_order:Group) => {\n\n\t\t\tlet group_fragment = group_order.fragment;\n\t\t\tlet optgroup = group_order.optgroup\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('readonly', self.isReadOnly)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.inputState();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.inputState();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.setLocked(true);\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.setLocked(false);\n\t}\n\n\t/**\n\t * Disable or enable user input on the control\n\t */\n\tsetLocked( lock:boolean = this.isReadOnly || this.isDisabled ){\n\t\tthis.isLocked = lock;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tthis.setDisabled(true);\n\t\tthis.close();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tthis.setDisabled(false);\n\t}\n\n\tsetDisabled(disabled:boolean){\n\t\tthis.focus_node.tabIndex\t\t= disabled ? -1 : this.tabIndex;\n\t\tthis.isDisabled\t\t\t\t\t= disabled;\n\t\tthis.input.disabled\t\t\t\t= disabled;\n\t\tthis.control_input.disabled\t\t= disabled;\n\t\tthis.setLocked();\n\t}\n\n\tsetReadOnly(isReadOnly:boolean){\n\t\tthis.isReadOnly\t\t\t\t\t= isReadOnly;\n\t\tthis.input.readOnly\t\t\t\t= isReadOnly;\n\t\tthis.control_input.readOnly\t\t= isReadOnly;\n\t\tthis.setLocked();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\taddEvent(this.input,'change',()=>{\n\t\tthis.sync();\n\t});\n};\n","/**\n * Plugin: \"checkbox_options\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\tconst cbOptions : CBOptions = Object.assign({\n\t\t// so that the user may add different ones as well\n\t\tclassName             : \"tomselect-checkbox\",\n\n\t\t// the following default to the historic plugin's values\n\t\tcheckedClassNames     : undefined,\n\t\tuncheckedClassNames   : undefined,\n\t}, userOptions);\n\n\n\tvar UpdateChecked = function(checkbox:HTMLInputElement, toCheck : boolean) {\n\t\tif( toCheck ){\n\t\t\tcheckbox.checked = true;\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t}else{\n\t\t\tcheckbox.checked = false;\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t}\n\t}\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input.' + cbOptions.className);\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tUpdateChecked(checkbox, option.classList.contains('selected'));\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tif (cbOptions.className) {\n\t\t\t\tcheckbox.classList.add(cbOptions.className);\n\t\t\t}\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\t\t\tUpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1) );\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isLocked ) return;\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n","/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption, TomItem } from '../../types/index';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { getDom, setAttr } from '../../vanilla';\n\n\nconst insertAfter = (referenceNode:Element, newNode:Element) => {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode.nextSibling);\n}\n\nconst insertBefore = (referenceNode:Element, newNode:Element) => {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode);\n}\n\nconst isBefore = (referenceNode:Element|undefined|null, newNode:Element|undefined|null) =>{\n\t\n\tdo{\n\t\tnewNode = newNode?.previousElementSibling;\n\n\t\tif( referenceNode == newNode ){\n\t\t\treturn true;\n\t\t}\n\n\t}while( newNode && newNode.previousElementSibling );\n\n\treturn false;\n}\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\tlet sortable = true;\n\t\tlet drag_item:TomItem|undefined;\n\n\n\t/**\n\t * Add draggable attribute to item\n\t */\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\t\t\tconst item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\t\t\tsetAttr(item,{'draggable':'true'});\n\n\n\t\t\t// prevent doc_mousedown (see tom-select.ts)\n\t\t\tconst mousedown = (evt:Event) => {\n\t\t\t\tif( !sortable ) preventDefault(evt);\n\t\t\t\tevt.stopPropagation();\n\t\t\t}\n\n\t\t\tconst dragStart = (evt:Event) => {\n\t\t\t\tdrag_item = item;\n\t\t\t\t\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\titem.classList.add('ts-dragging');\n\t\t\t\t}, 0);\n\t\t\t\t\n\t\t\t}\n\n\t\t\tconst dragOver = (evt:Event) =>{\n\t\t\t\tevt.preventDefault();\n\t\t\t\titem.classList.add('ts-drag-over');\n\t\t\t\tmoveitem(item,drag_item);\n\t\t\t}\n\n\t\t\tconst dragLeave = () => {\n\t\t\t\titem.classList.remove('ts-drag-over');\n\t\t\t}\n\n\t\t\tconst moveitem = (targetitem:TomItem, dragitem:TomItem|undefined) => {\n\t\t\t\tif( dragitem === undefined ) return;\n\t\t\t\t\n\t\t\t\tif( isBefore(dragitem,item) ){\n\t\t\t\t\tinsertAfter(targetitem,dragitem);\n\t\t\t\t}else{\n\t\t\t\t\tinsertBefore(targetitem,dragitem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst dragend = () => {\n\t\t\t\tdocument.querySelectorAll('.ts-drag-over').forEach(el=> el.classList.remove('ts-drag-over'));\n\t\t\t\tdrag_item?.classList.remove('ts-dragging');\n\t\t\t\tdrag_item = undefined;\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\tself.control.querySelectorAll(`[data-value]`).forEach((el:Element)=> {\n\t\t\t\t\tif( (<HTMLOptionElement>el).dataset.value ){\n\t\t\t\t\t\tlet value = (<HTMLOptionElement>el).dataset.value;\n\t\t\t\t\t\tif( value ){\n\t\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\t\n\n\n\t\t\taddEvent(item,'mousedown', mousedown);\n\t\t\taddEvent(item,'dragstart', dragStart);\n\t\t\taddEvent(item,'dragenter', dragOver)\n\t\t\taddEvent(item,'dragover', dragOver);\n\t\t\taddEvent(item,'dragleave', dragLeave);\n\t\t\taddEvent(item,'dragend', dragend);\n\t\t\t\t\n\t\t\treturn item;\n\t\t}\t\n\t});\n\n\n\n\tself.hook('instead','lock',()=>{\n\t\tsortable = false;\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tsortable = true;\n\t\treturn orig_unlock.call(self);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex, removeClasses } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\ttest_input.textContent\t= control.value;\n\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n","/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n};\n","/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\tself.ignoreHover\t= true;\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\tif( self.isLocked ) return;\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tself.clearPagination();\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\t// clear pagination\n\tself.clearPagination = ():void =>{\n\t\tpagination = {};\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt ){\n\t\t\tconst first_option = options[0];\n\t\t\tif( first_option !== undefined ){\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\n\t\t\t}\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n","import TomSelect from './tom-select';\n\nimport change_listener from './plugins/change_listener/plugin';\nimport checkbox_options from './plugins/checkbox_options/plugin';\nimport clear_button from './plugins/clear_button/plugin';\nimport drag_drop from './plugins/drag_drop/plugin';\nimport dropdown_header from './plugins/dropdown_header/plugin';\nimport caret_position from './plugins/caret_position/plugin';\nimport dropdown_input from './plugins/dropdown_input/plugin';\nimport input_autogrow from './plugins/input_autogrow/plugin';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin';\nimport no_active_items from './plugins/no_active_items/plugin';\nimport optgroup_columns from './plugins/optgroup_columns/plugin';\nimport remove_button from './plugins/remove_button/plugin';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin';\nimport virtual_scroll from './plugins/virtual_scroll/plugin';\n\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\n\nexport default TomSelect;\n"],"names":["$9dxg1","parcelRequire","forEvents","events","callback","split","forEach","event","MicroEvent","on","fct","event_array","this","_events","push","off","n","arguments","length","undefined","splice","indexOf","trigger","args","self","apply","constructor","MicroPlugin","Interface","plugins","static","name","fn","initializePlugins","key","queue","Array","isArray","plugin","settings","options","hasOwnProperty","shift","require","loadPlugin","Error","requested","loaded","names","super","arrayToPattern","chars","filter","Boolean","maxValueLength","join","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","i","setToPattern","toArray","Set","size","escape_regex","str","replace","reduce","longest","value","Math","max","unicodeLength","p","from","allSubstrings","input","result","start","substring","subresult","tmp","slice","charAt","unshift","code_points1","accent_pat","unicode_map1","multi_char_reg","max_char_length","latin_convert","latin_condensed","a","aa","ae","ao","au","av","ay","b","c","d","e","f","g","h","j","k","l","m","o","oe","oi","oo","ou","q","r","s","t","th","tz","u","v","vy","w","y","z","hv","latin","unicode","convert_pat","RegExp","Object","keys","initialize","_code_points","generateMap","normalize","form","asciifold","_asciifold","toLowerCase","generator","code_points","code_point_min","code_point_max","composed","String","fromCharCode","folded","code_point","generateSets","unicode_sets","addMatching","to_add","folded_set","patt","match","add","unicode_map","multi_char","set","sort","multi_char_patt","mapSequence","strings","min_replacement","chars_replaced","map","substringsToPattern","sub_pat","sequencesToPattern","sequences","all","sequence","seq","len","substrs","inSequences","needle_seq","end","needle_parts","parts","part","needle_part","substr","Sequence","min","last","clone","position","last_piece","JSON","parse","stringify","last_part","pop","last_substr","clone_last_len","getPattern","match_str","overlapping","added_types","has","new_seq","old_seq","getAttr","obj","getAttrNesting","scoreValue","token","weight","score","pos","regex","search","string","propToArray","iterate","object","cmp","Sifter","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","diacritics","getScoreFunction","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","items","id","fld","direction","sort_fld","optsUser","assign","trim","total","nesting","fn_score","item","_","fn_sort","limit","getDom","jquery","HTMLElement","isHtmlString","tpl","document","createElement","innerHTML","content","firstChild","querySelector","arg","escapeQuery","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","removeClasses","remove","_classes","concat","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","isEmptyObject","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightText","node","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightChildren","nodeType","childNodes","test","tagName","highlightRecursive","removeHighlight","elements","querySelectorAll","prototype","call","parent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_BACKSPACE","KEY_DELETE","KEY_TAB","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","refreshThrottle","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","timeout","setTimeout","loadDebounce","delay","loading","clearTimeout","loadedSearches","debounce_events","types","type","event_args","getSelection","selectionStart","selectionEnd","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","init_textbox","data_raw","opt","values","init_select","optionsMap","group_count","$order","readData","dataset","json","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","instance_i","TomSelect","setup","control_input","dropdown","dropdown_content","control","focus_node","passive_event","passive","listboxId","inputId","role","control_id","label","label_click","focus","for","label_id","width","classes_plugins","is_select_tag","multiple","load","ignoreHover","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","onBlur","onFocus","onPaste","doc_mousedown","composedPath","isFocused","blur","inputState","isOpen","win_scroll","positionDropdown","window","_destroy","removeEventListener","revertSettings","tabIndex","insertAdjacentElement","sync","isValid","isInvalid","refreshState","updateOriginalInput","refreshItems","close","isSetup","disable","readOnly","setReadOnly","enable","onChange","setupOptions","addOptions","registerOptionGroup","setupTemplates","templates","optgroup_header","escape","option_create","no_results","not_loading","setupCallbacks","callbacks","change","item_add","item_remove","item_select","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","get_settings","setValue","lastQuery","activeItems","clearActiveItems","onMouseDown","isInputHidden","isLocked","pastedText","inputValue","splitInput","piece","addItem","createItem","character","keyCode","which","constants","selectAll","hasOptions","open","activeOption","next","getAdjacent","setActiveOption","prev","canSelect","activeElement","advanceSelection","deleteSelection","lastValue","refreshTimeout","_onInput","refreshOptions","wasFocused","isDisabled","isReadOnly","ignoreFocus","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","addItems","setMaxItems","eventName","begin","swap","getLastActive","setActiveItemClass","removeActiveItem","last_active","idx","scroll","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","sifter","getSearchOptions","calculateScore","currentResults","hashed","triggerDropdown","html","has_create_option","active_group","groups","groups_order","same_query","results","active_option","show_dropdown","closest","getGroupFragment","order","group_order_i","order_group","fragment","group_fragment","createDocumentFragment","opt_value","opt_hash","option_el","getOption","includes","self_optgroup","$id","toString","group_order","group_heading","group_options","header","group_html","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","userOptions","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","data_old","getItem","uncacheValue","option_new","_render","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","last_item","x","isPending","wasFull","inputMode","isFull","caretPos","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","rtl","wrap_classList","isRequired","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","setLocked","setDisabled","destroy","tomselect","templateName","hook","when","method","new_fn","orig_method","result_new","input_arg","user_settings","dir","getComputedStyle","getPropertyValue","required","change_listener","checkbox_options","orig_onOptionSelect","cbOptions","checkedClassNames","uncheckedClassNames","UpdateChecked","checkbox","toCheck","checked","UpdateCheckbox","HTMLInputElement","orig_render_option","rendered","prepend","clear_button","title","button","insertAfter","referenceNode","newNode","_referenceNode$parent","nextSibling","_referenceNode$parent2","isBefore","_newNode","drag_drop","orig_lock","orig_unlock","drag_item","sortable","orig_render_item","draggable","dragStart","dragOver","moveitem","dragLeave","targetitem","dragitem","dragend","_drag_item","dropdown_header","headerClass","titleRowClass","labelClass","closeClass","close_link","caret_position","dropdown_input","div","orig_onBlur","relatedTarget","preventScroll","input_autogrow","test_input","cssText","transfer_styles","style_name","resize","clientWidth","no_backspace_delete","orig_deleteSelection","no_active_items","optgroup_columns","orig_keydown","previousSibling","remove_button","close_button","restore_on_backspace","text","virtual_scroll","orig_canLoad","orig_clearActiveOption","orig_loadCallback","load_more_opt","pagination","loading_more","default_values","shouldLoadMore","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","clearPagination","first_option","no_more_results","define","$1f0dc3b9307be026$var$breedSelect","$1f0dc3b9307be026$var$catImage","getElementById","$1f0dc3b9307be026$var$catInfo","$1f0dc3b9307be026$var$breedName","$1f0dc3b9307be026$var$description","$1f0dc3b9307be026$var$temperament","$1f0dc3b9307be026$var$changeBreeds","breedIdSelected","selectedIndex","displayLoader","fetchCatByBreed","then","catData","breeds","description","temperament","src","url","$1f0dc3b9307be026$var$displayInfo","catch","error","console","finally","notDisplayLoader","fetchBreeds","breed","$parcel$interopDefault","$d8ff08208c3800bf$exports","$1f0dc3b9307be026$var$populateBreeds"],"version":3,"file":"index.af4693df.js.map"}