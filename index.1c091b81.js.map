{"mappings":"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","sources":["src/index.js","node_modules/regenerator-runtime/runtime.js","node_modules/tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/index.js","node_modules/tom-select/src/contrib/microevent.ts","node_modules/tom-select/src/contrib/microplugin.ts","node_modules/tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/regex.js","node_modules/tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/strings.js","node_modules/tom-select/node_modules/@orchidjs/sifter/dist/esm/utils.js","node_modules/tom-select/node_modules/@orchidjs/sifter/dist/esm/sifter.js","node_modules/tom-select/node_modules/@orchidjs/sifter/lib/utils.ts","node_modules/tom-select/src/vanilla.ts","node_modules/tom-select/src/contrib/highlight.ts","node_modules/tom-select/src/constants.ts","node_modules/tom-select/src/defaults.ts","node_modules/tom-select/src/utils.ts","node_modules/tom-select/src/getSettings.ts","node_modules/tom-select/src/tom-select.ts","node_modules/tom-select/src/plugins/change_listener/plugin.ts","node_modules/tom-select/src/plugins/checkbox_options/plugin.ts","node_modules/tom-select/src/plugins/clear_button/plugin.ts","node_modules/tom-select/src/plugins/drag_drop/plugin.ts","node_modules/tom-select/src/plugins/dropdown_header/plugin.ts","node_modules/tom-select/src/plugins/caret_position/plugin.ts","node_modules/tom-select/src/plugins/dropdown_input/plugin.ts","node_modules/tom-select/src/plugins/input_autogrow/plugin.ts","node_modules/tom-select/src/plugins/no_backspace_delete/plugin.ts","node_modules/tom-select/src/plugins/no_active_items/plugin.ts","node_modules/tom-select/src/plugins/optgroup_columns/plugin.ts","node_modules/tom-select/src/plugins/remove_button/plugin.ts","node_modules/tom-select/src/plugins/restore_on_backspace/plugin.ts","node_modules/tom-select/src/plugins/virtual_scroll/plugin.ts","node_modules/tom-select/src/tom-select.complete.ts"],"sourcesContent":["'use-strict';\n\nimport {\n  fetchBreeds,\n  fetchCatByBreed,\n  displayLoader,\n  notDisplayLoader,\n} from './cat-api';\nimport TomSelect from 'tom-select';\n\nconst breedSelect = document.querySelector('.breed-select');\nconst catImage = document.getElementById('cat-image');\nconst catInfo = document.querySelector('.cat-info');\nconst breedName = document.getElementById('breed-name');\nconst description = document.getElementById('description');\nconst temperament = document.getElementById('temperament');\n\nstartPage();\n\nfetchBreeds().then(breeds => {\n  notDisplayLoader();\n  populateBreeds(breeds);\n  breedSelect.addEventListener('change', changeBreeds);\n});\n\nfunction populateBreeds(breeds) {\n  const options = breeds.map(breed => ({ value: breed.id, text: breed.name }));\n\n  const select = new TomSelect(breedSelect, {\n    hideSelected: false,\n    options: options,\n    placeholder: 'Select a Breed...',\n  });\n}\n\nfunction changeBreeds() {\n  const selectedOption = breedSelect.options[breedSelect.selectedIndex];\n  const breedIdSelected = selectedOption.value;\n\n  if (breedIdSelected) {\n    displayLoader();\n\n    fetchCatByBreed(breedIdSelected)\n      .then(catData => {\n        displayInfo(catData[0]);\n      })\n      .catch(error => {\n        console.error('Error fetching cat data:', error);\n        hideCatInfo();\n      })\n      .finally(() => {\n        notDisplayLoader();\n      });\n  }\n}\n\nfunction displayInfo(catData) {\n  breedName.textContent = catData.breeds[0].name || 'No description available';\n  description.textContent =\n    catData.breeds[0].description || 'No description available';\n  temperament.textContent =\n    catData.breeds[0].temperament || 'No information available';\n  catImage.src = catData.url;\n  catInfo.style.display = 'flex';\n}\n\nfunction hideCatInfo() {\n  catInfo.style.display = 'none';\n}\n\nfunction startPage() {\n  displayLoader();\n  breedSelect.style.display = 'none';\n  catInfo.style.display = 'none';\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\nimport { toArray, setToPattern, escape_regex, arrayToPattern, sequencePattern } from './regex.js';\nexport { escape_regex } from './regex.js';\nimport { allSubstrings } from './strings.js';\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return toArray(str).reduce(\n  /**\n   * @param {string} result\n   * @param {string} char\n   */\n  (result, char) => {\n    return result + _asciifold(char);\n  }, '');\n};\n/**\n * @param {string} str\n * @return {string}\n */\n\nconst _asciifold = str => {\n  str = normalize(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  }); //return str;\n\n  return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\nexport { _asciifold, asciifold, code_points, generateMap, generateSets, generator, getPattern, initialize, mapSequence, normalize, substringsToPattern, unicode_map };\n//# sourceMappingURL=index.js.map\n","/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\nexport { allSubstrings };\n//# sourceMappingURL=strings.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from '@orchidjs/unicode-variants';\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue } from './utils.js';\nimport { escape_regex, getPattern } from '@orchidjs/unicode-variants';\nexport { getPattern } from '@orchidjs/unicode-variants';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport { Sifter };\n//# sourceMappingURL=sifter.js.map\n","\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\trefreshThrottle: 300,\n\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * use setTimeout if timeout > 0 \n */\nexport const timeout = (fn:()=>void,timeout:number) => {\n\tif( timeout > 0 ){\n\t\treturn setTimeout(fn,timeout);\n\t}\n\n\tfn.call(null);\n\treturn null;\n}\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n","import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\t\tlet $order = 0;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\t\t\t\toption_data.$order\t\t\t= option_data.$order || ++$order;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\toptgroup_data.$order\t\t\t\t\t= optgroup_data.$order || ++$order;\n\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\ttimeout,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isReadOnly\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\tprivate refreshTimeout\t\t\t: null|ReturnType<typeof setTimeout> = null;\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete','spellcheck'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else if( input.readOnly ){\n\t\t\tself.setReadOnly(true);\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\t\n\t\tif( this.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.inputValue();\n\t\tif( this.lastValue === value ) return;\n\t\tthis.lastValue = value;\n\t\t\n\t\tif( value == '' ){\n\t\t\tthis._onInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif( this.refreshTimeout ){\n\t\t\tclearTimeout(this.refreshTimeout);\n\t\t}\n\n\t\tthis.refreshTimeout = timeout(()=> {\n\t\t\tthis.refreshTimeout = null;\n\t\t\tthis._onInput();\n\t\t}, this.settings.refreshThrottle);\n\t}\n\n\t_onInput():void {\n\t\tconst value = this.lastValue;\n\n\t\tif( this.settings.shouldLoad.call(this,value) ){\n\t\t\tthis.load(value);\n\t\t}\n\n\t\tthis.refreshOptions();\n\t\tthis.trigger('type', value);\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif( self.isDisabled || self.isReadOnly ){\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.inputState();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.inputState();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.inputState();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif( self.isDisabled || self.isReadOnly) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\n\t\ttype Group = {fragment:DocumentFragment,order:number,optgroup:string}\n\t\tconst groups: {[key:string]:number} = {};\n\t\tconst groups_order:Group[]\t= [];\n\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option:HTMLElement|null = null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// get fragment for group and the position of the group in group_order\n\t\tconst getGroupFragment = (optgroup:string,order:number):[number,DocumentFragment] => {\n\n\t\t\tlet group_order_i = groups[optgroup];\n\n\t\t\tif( group_order_i !== undefined ){\n\t\t\t\tlet order_group = groups_order[group_order_i];\n\t\t\t\tif( order_group !== undefined ){\n\t\t\t\t\treturn [group_order_i,order_group.fragment];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet group_fragment = document.createDocumentFragment();\n\t\t\tgroup_order_i = groups_order.length;\n\t\t\tgroups_order.push({fragment:group_fragment,order,optgroup});\n\n\t\t\treturn [group_order_i,group_fragment]\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\t\t\t\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\n\t\t\t\tlet order = option.$order;\n\t\t\t\tlet self_optgroup = self.optgroups[optgroup];\n\t\t\t\tif( self_optgroup === undefined ){\t\t\t\t\t\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}else{\n\t\t\t\t\torder = self_optgroup.$order;\n\t\t\t\t}\n\n\t\t\t\tconst [group_order_i,group_fragment] = getGroupFragment(optgroup,order);\n\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tif( optgroup != '' ){\n\t\t\t\t\tgroups[optgroup] = group_order_i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\treturn a.order - b.order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (group_order:Group) => {\n\n\t\t\tlet group_fragment = group_order.fragment;\n\t\t\tlet optgroup = group_order.optgroup\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('readonly', self.isReadOnly)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.inputState();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.inputState();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.setLocked(true);\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.setLocked(false);\n\t}\n\n\t/**\n\t * Disable or enable user input on the control\n\t */\n\tsetLocked( lock:boolean = this.isReadOnly || this.isDisabled ){\n\t\tthis.isLocked = lock;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tthis.setDisabled(true);\n\t\tthis.close();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tthis.setDisabled(false);\n\t}\n\n\tsetDisabled(disabled:boolean){\n\t\tthis.focus_node.tabIndex\t\t= disabled ? -1 : this.tabIndex;\n\t\tthis.isDisabled\t\t\t\t\t= disabled;\n\t\tthis.input.disabled\t\t\t\t= disabled;\n\t\tthis.control_input.disabled\t\t= disabled;\n\t\tthis.setLocked();\n\t}\n\n\tsetReadOnly(isReadOnly:boolean){\n\t\tthis.isReadOnly\t\t\t\t\t= isReadOnly;\n\t\tthis.input.readOnly\t\t\t\t= isReadOnly;\n\t\tthis.control_input.readOnly\t\t= isReadOnly;\n\t\tthis.setLocked();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\taddEvent(this.input,'change',()=>{\n\t\tthis.sync();\n\t});\n};\n","/**\n * Plugin: \"checkbox_options\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\tconst cbOptions : CBOptions = Object.assign({\n\t\t// so that the user may add different ones as well\n\t\tclassName             : \"tomselect-checkbox\",\n\n\t\t// the following default to the historic plugin's values\n\t\tcheckedClassNames     : undefined,\n\t\tuncheckedClassNames   : undefined,\n\t}, userOptions);\n\n\n\tvar UpdateChecked = function(checkbox:HTMLInputElement, toCheck : boolean) {\n\t\tif( toCheck ){\n\t\t\tcheckbox.checked = true;\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t}else{\n\t\t\tcheckbox.checked = false;\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t}\n\t}\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input.' + cbOptions.className);\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tUpdateChecked(checkbox, option.classList.contains('selected'));\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tif (cbOptions.className) {\n\t\t\t\tcheckbox.classList.add(cbOptions.className);\n\t\t\t}\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\t\t\tUpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1) );\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isLocked ) return;\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n","/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption, TomItem } from '../../types/index';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { getDom, setAttr } from '../../vanilla';\n\n\nconst insertAfter = (referenceNode:Element, newNode:Element) => {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode.nextSibling);\n}\n\nconst insertBefore = (referenceNode:Element, newNode:Element) => {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode);\n}\n\nconst isBefore = (referenceNode:Element|undefined|null, newNode:Element|undefined|null) =>{\n\t\n\tdo{\n\t\tnewNode = newNode?.previousElementSibling;\n\n\t\tif( referenceNode == newNode ){\n\t\t\treturn true;\n\t\t}\n\n\t}while( newNode && newNode.previousElementSibling );\n\n\treturn false;\n}\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\tlet sortable = true;\n\t\tlet drag_item:TomItem|undefined;\n\n\n\t/**\n\t * Add draggable attribute to item\n\t */\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\t\t\tconst item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\t\t\tsetAttr(item,{'draggable':'true'});\n\n\n\t\t\t// prevent doc_mousedown (see tom-select.ts)\n\t\t\tconst mousedown = (evt:Event) => {\n\t\t\t\tif( !sortable ) preventDefault(evt);\n\t\t\t\tevt.stopPropagation();\n\t\t\t}\n\n\t\t\tconst dragStart = (evt:Event) => {\n\t\t\t\tdrag_item = item;\n\t\t\t\t\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\titem.classList.add('ts-dragging');\n\t\t\t\t}, 0);\n\t\t\t\t\n\t\t\t}\n\n\t\t\tconst dragOver = (evt:Event) =>{\n\t\t\t\tevt.preventDefault();\n\t\t\t\titem.classList.add('ts-drag-over');\n\t\t\t\tmoveitem(item,drag_item);\n\t\t\t}\n\n\t\t\tconst dragLeave = () => {\n\t\t\t\titem.classList.remove('ts-drag-over');\n\t\t\t}\n\n\t\t\tconst moveitem = (targetitem:TomItem, dragitem:TomItem|undefined) => {\n\t\t\t\tif( dragitem === undefined ) return;\n\t\t\t\t\n\t\t\t\tif( isBefore(dragitem,item) ){\n\t\t\t\t\tinsertAfter(targetitem,dragitem);\n\t\t\t\t}else{\n\t\t\t\t\tinsertBefore(targetitem,dragitem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst dragend = () => {\n\t\t\t\tdocument.querySelectorAll('.ts-drag-over').forEach(el=> el.classList.remove('ts-drag-over'));\n\t\t\t\tdrag_item?.classList.remove('ts-dragging');\n\t\t\t\tdrag_item = undefined;\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\tself.control.querySelectorAll(`[data-value]`).forEach((el:Element)=> {\n\t\t\t\t\tif( (<HTMLOptionElement>el).dataset.value ){\n\t\t\t\t\t\tlet value = (<HTMLOptionElement>el).dataset.value;\n\t\t\t\t\t\tif( value ){\n\t\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\t\n\n\n\t\t\taddEvent(item,'mousedown', mousedown);\n\t\t\taddEvent(item,'dragstart', dragStart);\n\t\t\taddEvent(item,'dragenter', dragOver)\n\t\t\taddEvent(item,'dragover', dragOver);\n\t\t\taddEvent(item,'dragleave', dragLeave);\n\t\t\taddEvent(item,'dragend', dragend);\n\t\t\t\t\n\t\t\treturn item;\n\t\t}\t\n\t});\n\n\n\n\tself.hook('instead','lock',()=>{\n\t\tsortable = false;\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tsortable = true;\n\t\treturn orig_unlock.call(self);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex, removeClasses } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\ttest_input.textContent\t= control.value;\n\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n","/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n};\n","/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\tself.ignoreHover\t= true;\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\tif( self.isLocked ) return;\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tself.clearPagination();\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\t// clear pagination\n\tself.clearPagination = ():void =>{\n\t\tpagination = {};\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt ){\n\t\t\tconst first_option = options[0];\n\t\t\tif( first_option !== undefined ){\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\n\t\t\t}\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n","import TomSelect from './tom-select';\n\nimport change_listener from './plugins/change_listener/plugin';\nimport checkbox_options from './plugins/checkbox_options/plugin';\nimport clear_button from './plugins/clear_button/plugin';\nimport drag_drop from './plugins/drag_drop/plugin';\nimport dropdown_header from './plugins/dropdown_header/plugin';\nimport caret_position from './plugins/caret_position/plugin';\nimport dropdown_input from './plugins/dropdown_input/plugin';\nimport input_autogrow from './plugins/input_autogrow/plugin';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin';\nimport no_active_items from './plugins/no_active_items/plugin';\nimport optgroup_columns from './plugins/optgroup_columns/plugin';\nimport remove_button from './plugins/remove_button/plugin';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin';\nimport virtual_scroll from './plugins/virtual_scroll/plugin';\n\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\n\nexport default TomSelect;\n"],"names":["$eWrZJ","parcelRequire","$21b983287c82ebd3$var$runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err1","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","value1","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","next1","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","key1","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","$21b983287c82ebd3$exports","regeneratorRuntime","accidentalStrictMode","globalThis","Function","forEvents","events","callback","split","event","MicroEvent1","MicroEvent","_events","on","fct","event_array","_this","off","n","arguments","splice","indexOf","trigger","_len","args","Array","_key","apply","MicroPlugin","Interface","plugins","$parcel$interopDefault","$8nrFW","names","settings","requested","loaded","initializePlugins","queue","isArray","plugin","options","shift","require","loadPlugin","unicode_map1","multi_char_reg","arrayToPattern","chars","filter","Boolean","maxValueLength","join","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","setToPattern","toArray","Set","size","escape_regex","str","replace","RegExp","reduce","longest","Math","max","unicodeLength","p","from","allSubstrings","input","start","substring","subresult","tmp","unshift","code_points1","accent_pat","max_char_length","latin_convert","latin_condensed","a","aa","ae","ao","au","av","ay","b","c","d","e","f","g","h","j","k","l","m","o","oe","oi","oo","ou","q","r","s","t","th","tz","u","v","vy","w","y","z","hv","latin","unicode","i1","char1","convert_pat","initialize","_code_points","generateMap","normalize","form","asciifold","_asciifold","toLowerCase","code_points","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","code_point_min","code_point_max","composed","folded","_ctx","String","fromCharCode","code_point","t0","return","generateSets","unicode_sets","addMatching","to_add","folded_set","patt","match","add","unicode_map","multi_char","set","sort","multi_char_patt","mapSequence","strings","min_replacement","chars_replaced","map","substringsToPattern","sub_pat","sequencesToPattern","sequences","all","sequence","seq","len","substrs","inSequences","needle_seq","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","end","needle_parts","parts","part","needle_part","substr","Sequence1","Sequence","min","position","last_piece","clone1","JSON","parse","stringify","last_part","last_substr","clone_last_len","getPattern","match_str","overlapping","added_types","last","clone","len1","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step3","_iterator3","clone2","has","new_seq","old_seq","i2","_loop","getAttr","getAttrNesting","scoreValue","token","weight","score","pos","regex","search","string","propToArray","iterate","cmp","Sifter1","Sifter","items","diacritics","query","respect_word_boundaries","weights","field_regex","tokens","words","word","field_match","field","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","id","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step4","_iterator4","direction","fld","sort_fld","optsUser","assign","trim","tokenize","total","nesting","search1","fn_score","item","_","fn_sort","limit","getDom","jquery","HTMLElement","isHtmlString","tpl","document","createElement","innerHTML","content","firstChild","querySelector","escapeQuery","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","removeClasses","remove","_classes","concat","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","isEmptyObject","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightText","node","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightChildren","nodeType","childNodes","test","tagName","highlightRecursive","removeHighlight","elements","querySelectorAll","parent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_BACKSPACE","KEY_DELETE","KEY_TAB","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","delimiter","splitOn","persist","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","refreshThrottle","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","timeout","setTimeout","loadDebounce","delay","loading","clearTimeout","loadedSearches","debounce_events","types","event_args","getSelection","selectionStart","selectionEnd","preventDefault","evt","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","init_select","optionsMap","group_count","$order","readData","dataset","json","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_textbox","data_raw","opt","instance_i","TomSelect1","_superClass","TomSelect","input_arg","user_settings","dir","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isReadOnly","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","refreshTimeout","tomselect","$ds8z5","window","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","$hKHmD","setup","passive_event","passive","listboxId","role","control_id","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","positionDropdown","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","readOnly","setReadOnly","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","optgroup_header","escape","option_create","no_results","not_loading","callbacks","change","item_add","item_remove","item_select","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","_this1","addItem","createItem","character","keyCode","which","constants","selectAll","open","getAdjacent","setActiveOption","canSelect","activeElement","advanceSelection","deleteSelection","_onInput","refreshOptions","wasFocused","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","addItems","setMaxItems","eventName","begin","swap","getLastActive","setActiveItemClass","removeActiveItem","last_active","idx","scroll","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getScoreFunction","getSearchOptions","calculateScore","hashed","html","has_create_option","active_group","triggerDropdown","groups","groups_order","same_query","results","active_option","show_dropdown","closest","getGroupFragment","group_order_i","order_group","fragment","group_fragment","createDocumentFragment","opt_value","opt_hash","option_el","getOption","includes","self_optgroup","$1t1Wn","$id","toString","group_order","group_heading","group_options","header","group_html","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","data_old","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","last_item","x","isPending","wasFull","isFull","insertAtCaret","output","caret","lock","_obj","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","rect","scrollY","left","scrollX","selection","tail","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","setLocked","setDisabled","destroy","templateName","hook","when","new_fn","orig_method","result_new","change_listener","checkbox_options","orig_onOptionSelect","cbOptions","checkedClassNames","uncheckedClassNames","UpdateChecked","checkbox","toCheck","checked","UpdateCheckbox","HTMLInputElement","orig_render_option","rendered","prepend","clear_button","title","button","insertAfter","referenceNode","newNode","_referenceNode$parent","nextSibling","_referenceNode$parent2","isBefore","_newNode","drag_drop","drag_item","orig_lock","orig_unlock","sortable","orig_render_item","draggable","dragStart","dragOver","moveitem","dragLeave","targetitem","dragitem","dragend","_drag_item","dropdown_header","headerClass","titleRowClass","labelClass","closeClass","close_link","caret_position","dropdown_input","div","orig_onBlur","relatedTarget","preventScroll","input_autogrow","test_input","cssText","transfer_styles","style_name","resize","clientWidth","no_backspace_delete","orig_deleteSelection","no_active_items","optgroup_columns","orig_keydown","previousSibling","remove_button","close_button","restore_on_backspace","text","virtual_scroll","load_more_opt","orig_canLoad","orig_clearActiveOption","orig_loadCallback","pagination","loading_more","default_values","shouldLoadMore","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","clearPagination","first_option","no_more_results","$b8f9b7833fa37166$var$breedSelect","$b8f9b7833fa37166$var$catImage","getElementById","$b8f9b7833fa37166$var$catInfo","$b8f9b7833fa37166$var$breedName","$b8f9b7833fa37166$var$description","$b8f9b7833fa37166$var$temperament","$b8f9b7833fa37166$var$changeBreeds","breedIdSelected","selectedIndex","displayLoader","fetchCatByBreed","catData","breeds","description","temperament","src","url","$b8f9b7833fa37166$var$displayInfo","console","finally","notDisplayLoader","fetchBreeds","breed","$a24313c46c5cea36$exports","$b8f9b7833fa37166$var$populateBreeds"],"version":3,"file":"index.1c091b81.js.map"}